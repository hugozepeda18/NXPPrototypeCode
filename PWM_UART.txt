/*
 * main implementation: use this 'C' sample to create your own application
 *
 */
#include "S32K144.h" /* include peripheral declarations S32K144 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

unsigned int num=0;

void delay(unsigned short tiempo)
{
	PCC->PCCn[PCC_LPTMR0_INDEX]=1<<30;
	LPTMR0->PSR=5;
	LPTMR0->CMR=tiempo - 1;
	LPTMR0->CSR=1;
	do{}while(((LPTMR0->CSR)&0x00000080)==0x00000000);
	LPTMR0->CSR|=1<<7;
}

void PWM(unsigned int num)
{
	unsigned int t_on,t_off;
	t_on=num*10;
	t_off=1000-t_on;
	for(;;)
	{
		PTC->PDOR=(0<<5);
		PTD->PDOR=(0<<16);
		delay(t_off);
		PTC->PDOR=(1<<5);
		PTD->PDOR=(1<<16);
		delay(t_on);
	}
}

void LPUART1_RxTx_IRQHandler(void)
{
	LPUART1->CTRL=1<<21;
	num = atoi(LPUART1->DATA);
	PWM(num);
}

int main(void)
{
	PCC->PCCn[PCC_PORTC_INDEX]=(1<<30);
	PORTC->PCR[6]=(2<<8);

	PCC->PCCn[PCC_PORTD_INDEX]=(1<<30);
	PORTD->PCR[16]=(1<<8);
	PTD->PDDR=(1<<16);

	PORTC->PCR[5]=(1<<8);
	PTC->PDDR=(1<<5);

	PCC->PCCn[PCC_LPUART1_INDEX]=~(1<<30);
	PCC->PCCn[PCC_LPUART1_INDEX]|=(1<<30)+(3<<24);

	LPUART1->BAUD=156;
	LPUART1->CTRL=1<<18;

	SCG->FIRCCSR=1;
	SCG->FIRCDIV=(2<<8);
	SCG->FIRCCFG=0;

	S32_NVIC->ISER[1]|=(1<<(33%32));

	return 0;
}
